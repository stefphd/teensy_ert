%% File : sfunar_clock.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for sfunar_clock
%%

%implements sfunar_clock "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<ArduinoCommonBlockTypeSetup(block, system)>
    
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output
  %%
  %assign x1_val = LibBlockDWork(DWork[0], "", "", 0)
  %<x1_val> = ((float) millis())/1000.0F;
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
    %if !LibBlockOutputSignalIsExpr(0)
    %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
    %assign x1_val = LibBlockDWork(DWork[0], "", "", 0)
    %%
    %<y1_val> = ((float) millis())/1000.0F - %<x1_val>;
    %endif 
  %%
%endfunction

%% Function: BlockOutputSignal ============================================
%%
%function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
  %%
  %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
  %%
  %switch retType
    %case "Signal"
      %if portIdx == 0
        %return "(float) millis()/1000.0F"
      %else
        %assign errTxt = "Block output port index not supported: %<portIdx>"
        %<LibBlockReportError(block,errTxt)>
      %endif
    %default
      %assign errTxt = "Unsupported return type: %<retType>"
      %<LibBlockReportError(block,errTxt)>
  %endswitch
  %%
%endfunction

%% [EOF]
